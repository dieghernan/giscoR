% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gisco_get_nuts.R
\name{gisco_get_nuts}
\alias{gisco_get_nuts}
\title{Download Geospatial NUTS Data from GISCO}
\source{
\href{https://gisco-services.ec.europa.eu/distribution/v2/nuts/}{GISCO NUTS}
}
\usage{
gisco_get_nuts(
  resolution = "20",
  year = "2016",
  epsg = "4326",
  nuts_level = "all",
  cache = TRUE,
  update_cache = FALSE,
  cache_dir = NULL,
  spatialtype = "RG",
  country = NULL,
  nuts_id = NULL
)
}
\arguments{
\item{resolution}{Resolution of the geospatial data. One of
\itemize{
   \item "60" (1:60million),
   \item "20" (1:20million)
   \item "10" (1:10million)
   \item "03" (1:3million) or
   \item "01" (1:1million).
   }}

\item{year}{Release year. One of
"2003", "2006", "2010", "2013", "2016" or "2021".}

\item{epsg}{projection of the map: 4-digit \href{https://spatialreference.org/ref/epsg/}{EPSG code}. One of:
\itemize{
\item "4326" - WGS84
\item "3035" - ETRS89 / ETRS-LAEA
\item "3857" - Pseudo-Mercator
}}

\item{nuts_level}{NUTS level. One of "0" (Country-level), "1", "2" or "3". See \url{https://ec.europa.eu/eurostat/web/nuts/background}.#'}

\item{cache}{a logical whether to do caching. Default is \code{TRUE}.}

\item{update_cache}{a logical whether to update cache.}

\item{cache_dir}{a path to a cache directory. The directory have to exist.  The \code{NULL} (default) uses and creates \code{/gisco} directory in the temporary directory from \code{\link{tempdir}}. The directory can also be set with \code{options(gisco_cache_dir = <path>)}.}

\item{spatialtype}{Type of geometry to be returned:
\itemize{
 \item RG: Regions - Multipolygon
 \item LB: Labels - Point
 \item BN: Boundaries - Multilines
}}

\item{country}{Optional. A character vector of ISO-3 country codes. See Details}

\item{nuts_id}{Optional. A character vector of NUTS IDs.}
}
\value{
a \code{sf} object.
}
\description{
Downloads a simple feature (\code{sf}) object.
}
\details{
\code{country} only available when applicable.
Some \code{spatialtype} datasets (as Multilines data-types) may not have country-level identifies.

You can convert Eurostat country codes to ISO3 codes using the \code{\link[countrycode]{countrycode}} function:

eurostat_codes <- c("ES","UK","EL","PL","PT")\cr
\cr
countrycode::countrycode(\cr
  eurostat_codes,\cr
  origin = "eurostat",\cr
  destination = "iso3c"\cr
)
}
\note{
Please check the download and usage provisions on \link{gisco_attributions}.
}
\examples{
\donttest{
library(eurostat)
library(sf)
map <- gisco_get_nuts(year = "2016",
                      nuts_level = "2",
                      epsg = "3035")

#For the borders only
brds <- gisco_get_nuts(
  year = "2016",
  spatialtype = "BN",
  nuts_level = "0",
  epsg = "3035"
)

pps <- get_eurostat("tgs00026")
pps <- pps[grep("2016", pps$time),]

map.join <- merge(map,
                  pps,
                  by.x = "NUTS_ID",
                  by.y = "geo",
                  all.x = TRUE)

library(cartography)
br <- getBreaks(map.join$values, method = "jenks")

library(colorspace)
pal <- sequential_hcl(n = (length(br) - 1),
                      pal = "Inferno",
                      rev = TRUE)
opar <- par(no.readonly = TRUE)
par(mar = c(1, 1, 1, 1))
plot(
  st_geometry(map.join),
  col = NA,
  bg = "aliceblue",
  xlim = c(2200000, 7150000),
  ylim = c(1380000, 5500000)
)
choroLayer(
  map.join,
  var = "values",
  border = "grey60",
  breaks = br,
  col = pal,
  add = TRUE,
  legend.pos = "n"
)
plot(st_geometry(brds),
     col = "black",
     add = TRUE,
     lwd = 1.2)
att <- paste0("Data extracted from package eurostat \n",
              gisco_attributions(copyright = FALSE))

legendChoro(
  title.txt = NA,
  breaks = paste0(br / 1000, "K EUR"),
  col = pal
)
layoutLayer("Purchase Parity Power, NUTS 2 regions (2016)",
            col = pal[3],
            sources = att)
par(opar)
}
}
\seealso{
\link{gisco_countrycode}, \link{gisco_nuts}
}
\author{
dieghernan, \url{https://github.com/dieghernan/}
}
